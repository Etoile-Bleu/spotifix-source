name: 📦 Release Simple

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Type de release'
        required: true
        default: 'stable'
        type: choice
        options:
          - stable
          - nightly

jobs:
  release:
    name: 🚀 Create Release
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
      actions: read
      pull-requests: write
      issues: write
      repository-projects: write
    
    steps:
    - name: 🔐 Check GitHub Token Permissions
      run: |
        echo "🔍 Vérification des permissions du token GitHub..."
        echo "Repository: ${{ github.repository }}"
        echo "Actor: ${{ github.actor }}"
        echo "Event: ${{ github.event_name }}"
        
        # Vérifier le type de token utilisé
        if [ -n "${{ secrets.PAT_TOKEN }}" ]; then
          echo "🔑 Utilisation du PAT_TOKEN personnalisé"
        else
          echo "🔑 Utilisation du GITHUB_TOKEN par défaut"
        fi
        
        echo "✨ Vérification des permissions terminée"

    - name: � Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

    - name: 🔍 Extract version from build.gradle.kts
      id: extract_version
      run: |
        VERSION=$(grep 'val version = ' app/build.gradle.kts | sed 's/.*val version = "\(.*\)".*/\1/')
        echo "Current version in build.gradle.kts: $VERSION"
        echo "current_version=$VERSION" >> $GITHUB_OUTPUT

    - name: 🔍 Get latest release version
      id: get_latest_release
      run: |
        LATEST_RELEASE=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r '.tag_name // "v0.0.0"')
        LATEST_VERSION=${LATEST_RELEASE#v}
        echo "Latest release version: $LATEST_VERSION"
        echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT

    - name: ✅ Check if version was updated
      id: version_check
      run: |
        CURRENT="${{ steps.extract_version.outputs.current_version }}"
        LATEST="${{ steps.get_latest_release.outputs.latest_version }}"
        
        echo "Comparing versions:"
        echo "  Current: $CURRENT"
        echo "  Latest:  $LATEST"
        
        if [ "$CURRENT" = "$LATEST" ]; then
          echo "❌ ERREUR: La version dans build.gradle.kts ($CURRENT) n'a pas été modifiée"
          echo "Veuillez mettre à jour la version dans app/build.gradle.kts avant de créer une release"
          exit 1
        else
          echo "✅ Version mise à jour: $LATEST → $CURRENT"
        fi

    - name: ⚙️ Setup JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: 17
        cache: 'gradle'

    - name: 🔐 Cook KeyStore
      run: echo "${{ secrets.KEYSTORE_B64 }}" | base64 -d > $GITHUB_WORKSPACE/signing-key.jks

    - name: 🔧 Make gradlew executable
      run: chmod +x ./gradlew

    - name: 🚀 Build with Gradle
      run: |
        if [ "${{ github.event.inputs.release_type }}" = "stable" ]; then
          echo "Building stable APK..."
          ./gradlew assembleStable \
          -Pandroid.injected.signing.store.file=$GITHUB_WORKSPACE/signing-key.jks \
          -Pandroid.injected.signing.store.password=${{ secrets.PASSWORD }} \
          -Pandroid.injected.signing.key.alias=spotify-key \
          -Pandroid.injected.signing.key.password=${{ secrets.PASSWORD }}
          cp app/build/outputs/apk/stable/app-stable.apk app/build/v${{ steps.extract_version.outputs.current_version }}.apk
        else
          echo "Building nightly APK..."
          ./gradlew assembleNightly \
          -Pandroid.injected.signing.store.file=$GITHUB_WORKSPACE/signing-key.jks \
          -Pandroid.injected.signing.store.password=${{ secrets.PASSWORD }} \
          -Pandroid.injected.signing.key.alias=spotify-key \
          -Pandroid.injected.signing.key.password=${{ secrets.PASSWORD }}
          cp app/build/outputs/apk/nightly/app-nightly.apk app/build/v${{ steps.extract_version.outputs.current_version }}.apk
        fi

    - name: � Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: spotifix-v${{ steps.extract_version.outputs.current_version }}
        path: app/build/v${{ steps.extract_version.outputs.current_version }}.apk

    - name: �📦 Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.extract_version.outputs.current_version }}
        name: 🚀 Spotifix v${{ steps.extract_version.outputs.current_version }}
        make_latest: ${{ github.event.inputs.release_type == 'stable' }}
        generate_release_notes: true
        body: |
          ## 🎉 Version ${{ steps.extract_version.outputs.current_version }}
          
          **Type:** ${{ github.event.inputs.release_type }}
          **Précédente version:** ${{ steps.get_latest_release.outputs.latest_version }}
          
          ### 📱 Installation
          Téléchargez l'APK ci-dessous et installez-le sur votre appareil Android.
          
          ### 🔄 Mise à jour automatique
          Si vous avez déjà l'app installée, utilisez "Vérifier les mises à jour" dans les paramètres.
          
          ---
          *Release générée automatiquement* 🤖
        files: app/build/v${{ steps.extract_version.outputs.current_version }}.apk
        draft: false
        prerelease: ${{ github.event.inputs.release_type == 'nightly' }}
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
