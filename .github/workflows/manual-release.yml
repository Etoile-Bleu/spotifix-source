name: üì¶ Release from build.gradle.kts

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Type de release'
        required: true
        default: 'stable'
        type: choice
        options:
          - stable
          - nightly

jobs:
  release:
    name: üöÄ Create Release
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
      actions: read
      pull-requests: write
      issues: write
      repository-projects: write
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
        persist-credentials: true
    
    - name: üîç Extract version from build.gradle.kts
      id: extract_version
      run: |
        VERSION=$(grep 'val version = ' app/build.gradle.kts | sed 's/.*val version = "\(.*\)".*/\1/')
        echo "Current version in build.gradle.kts: $VERSION"
        echo "current_version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: üîç Get latest release version
      id: get_latest_release
      run: |
        LATEST_RELEASE=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r '.tag_name // "v0.0.0"')
        LATEST_VERSION=${LATEST_RELEASE#v}
        echo "Latest release version: $LATEST_VERSION"
        echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
    
    - name: ‚úÖ Check if version was updated
      id: version_check
      run: |
        CURRENT="${{ steps.extract_version.outputs.current_version }}"
        LATEST="${{ steps.get_latest_release.outputs.latest_version }}"
        
        echo "Comparing versions:"
        echo "  Current: $CURRENT"
        echo "  Latest:  $LATEST"
        
        if [ "$CURRENT" = "$LATEST" ]; then
          echo "‚ùå ERREUR: La version dans build.gradle.kts ($CURRENT) n'a pas √©t√© modifi√©e"
          echo "Veuillez mettre √† jour la version dans app/build.gradle.kts avant de cr√©er une release"
          exit 1
        else
          echo "‚úÖ Version mise √† jour: $LATEST ‚Üí $CURRENT"
        fi
    
    - name: ‚öôÔ∏è Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: üõ†Ô∏è Setup Gradle with cache
      uses: gradle/actions/setup-gradle@v3
      with:
        gradle-home-cache-cleanup: true
        cache-read-only: false
    
    - name: üì¶ Cache Android SDK
      uses: actions/cache@v4
      with:
        path: |
          ~/.android/sdk
        key: android-sdk-${{ runner.os }}
    
    - name: üîß Make gradlew executable
      run: chmod +x ./gradlew
    
    - name: üöÄ Build APK with parallel execution
      run: |
        # Configuration pour acc√©l√©rer le build
        export GRADLE_OPTS="-Xmx4g -XX:+UseParallelGC -XX:MaxMetaspaceSize=1g"
        
        if [ "${{ github.event.inputs.release_type }}" = "stable" ]; then
          echo "Building stable APK with optimizations..."
          ./gradlew assembleStable \
            --parallel \
            --build-cache \
            --configuration-cache \
            --daemon \
            -Dorg.gradle.jvmargs="-Xmx4g -XX:+UseParallelGC" \
            -Dkotlin.incremental=true \
            -Dkotlin.compiler.execution.strategy=in-process
        else
          echo "Building nightly APK with optimizations..."
          ./gradlew assembleNightly \
            --parallel \
            --build-cache \
            --configuration-cache \
            --daemon \
            -Dorg.gradle.jvmargs="-Xmx4g -XX:+UseParallelGC" \
            -Dkotlin.incremental=true \
            -Dkotlin.compiler.execution.strategy=in-process
        fi
    
    - name: üì¶ Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.extract_version.outputs.current_version }}
        name: üöÄ Spotifix v${{ steps.extract_version.outputs.current_version }}
        generate_release_notes: true
        make_latest: ${{ github.event.inputs.release_type == 'stable' }}
        body: |
          ## üéâ Version ${{ steps.extract_version.outputs.current_version }}
          
          **Type:** ${{ github.event.inputs.release_type }}
          **Pr√©c√©dente version:** ${{ steps.get_latest_release.outputs.latest_version }}
          
          ### üì± Installation
          T√©l√©chargez l'APK ci-dessous et installez-le sur votre appareil Android.
          
          ### üîÑ Mise √† jour automatique
          Si vous avez d√©j√† l'app install√©e, utilisez "V√©rifier les mises √† jour" dans les param√®tres.
          
          ---
          *Release g√©n√©r√©e automatiquement* ü§ñ
        files: |
          app/build/outputs/apk/**/*.apk
        draft: false
        prerelease: ${{ github.event.inputs.release_type == 'nightly' }}
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
