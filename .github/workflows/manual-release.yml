name: 📦 Auto Release

on:
  workflow_dispatch:
    inputs:
      increment_type:
        description: 'Type d\'incrémentation'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch   # 0.0.1 -> 0.0.2
        - minor   # 0.0.1 -> 0.1.0
        - major   # 0.0.1 -> 1.0.0
      release_type:
        description: 'Type de release'
        required: true
        default: 'stable'
        type: choice
        options:
        - stable
        - nightly

jobs:
  create-release:
    name: 🚀 Create Auto Release
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: 🔍 Get latest version
      id: get_version
      run: |
        # Récupérer la dernière version depuis les tags
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        echo "Latest tag: $LATEST_TAG"
        
        # Extraire le numéro de version (enlever le 'v')
        CURRENT_VERSION=${LATEST_TAG#v}
        echo "Current version: $CURRENT_VERSION"
        
        # Séparer major.minor.patch
        IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
        
        # Incrémenter selon le type choisi
        case "${{ github.event.inputs.increment_type }}" in
          "major")
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
            ;;
          "minor")
            MINOR=$((MINOR + 1))
            PATCH=0
            ;;
          "patch")
            PATCH=$((PATCH + 1))
            ;;
        esac
        
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"
        echo "New version: $NEW_VERSION"
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
    
    - name: 📝 Update version in build.gradle.kts
      run: |
        NEW_VERSION="${{ steps.get_version.outputs.new_version }}"
        sed -i "s/val version = \".*\"/val version = \"$NEW_VERSION\"/" app/build.gradle.kts
        echo "Updated version to $NEW_VERSION in build.gradle.kts"
    
    - name: 💾 Commit version update
      run: |
        NEW_VERSION="${{ steps.get_version.outputs.new_version }}"
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add app/build.gradle.kts
        git commit -m "🔼 Bump version to $NEW_VERSION"
        git push origin master
    
    - name: 🏷️ Create and push tag
      run: |
        NEW_VERSION="${{ steps.get_version.outputs.new_version }}"
        git tag v$NEW_VERSION
        git push origin v$NEW_VERSION
    
    - name: ⚙️ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: 🛠️ Setup Gradle
      uses: gradle/gradle-build-action@v3
    
    - name: 🔧 Make gradlew executable
      run: chmod +x ./gradlew
    
    - name: 🏗️ Build APK
      run: |
        if [ "${{ github.event.inputs.release_type }}" == "stable" ]; then
          ./gradlew assembleStable
        else
          ./gradlew assembleNightly
        fi
    
    - name: 📦 Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.get_version.outputs.new_version }}
        name: 🚀 Release ${{ steps.get_version.outputs.new_version }}
        body: |
          ## 🎉 Version ${{ steps.get_version.outputs.new_version }}
          
          **Type d'incrémentation:** ${{ github.event.inputs.increment_type }}
          **Type de release:** ${{ github.event.inputs.release_type }}
          
          ### 📱 Installation
          Téléchargez l'APK ci-dessous et installez-la sur votre appareil Android.
          
          ### 🔄 Mise à jour automatique
          Si vous avez déjà l'app installée, utilisez la fonction "Vérifier les mises à jour" dans les paramètres.
          
          ---
          *Release générée automatiquement par GitHub Actions* 🤖
        files: |
          app/build/outputs/apk/**/*.apk
        draft: false
        prerelease: ${{ github.event.inputs.release_type == 'nightly' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: 🛠️ Setup Gradle
      uses: gradle/gradle-build-action@v3
    
    - name: 🔧 Make gradlew executable
      run: chmod +x ./gradlew
    
    - name: 🏗️ Build APK
      run: |
        if [ "${{ github.event.inputs.release_type }}" == "stable" ]; then
          ./gradlew assembleStable
        else
          ./gradlew assembleNightly
        fi
    
    - name: 📦 Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.event.inputs.version }}
        name: Release ${{ github.event.inputs.version }}
        body: |
          🎉 **Release ${{ github.event.inputs.version }}**
          
          **Type:** ${{ github.event.inputs.release_type }}
          **Date:** ${{ github.run_id }}
          
          ### 📱 Installation
          Téléchargez l'APK ci-dessous et installez-le sur votre appareil.
          
          ### 🔄 Mise à jour automatique
          Si vous avez déjà l'app installée, elle détectera automatiquement cette mise à jour.
        draft: false
        prerelease: ${{ github.event.inputs.release_type == 'nightly' }}
        files: |
          app/build/outputs/apk/stable/*.apk
          app/build/outputs/apk/nightly/*.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
